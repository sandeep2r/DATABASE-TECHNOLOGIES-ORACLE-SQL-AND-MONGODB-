--------------------------
SQL : Introduction
--------------------------

Structured Query Language -- High level language that helps talk to the database

Categories of commands in SQL
---------------------
a) DDL (Data Definition Language) [changes made would be permanent]
CREATE, DROP, ALTER, RENAME,TRUNCATE

b) DML (Data Manipulation Language)[changes made would be Temporary]
INSERT,UPDATE,DELETE

c) TCL ( Transaction Control Language) [Always works on DML's]
COMMIT ROLLBACK SAVEPOINT

d) DCL ( Data Control Language) [useful across users when you need to give/takeback permissions	]
GRANT REVOKE 

e) DQL ( Data Query Language)
SELECT


----------------------------------------
what is schema and schema objects ?
schema -- logical container where all the schema objects will reside 
   ex: gaurav[username]/gaurav[password]  
       cdac[username]/pass[password] 
	   
  schema objects -- objects in the schema 
   ex: table , view , procedure, function 
   
   
gaurav -- student table    

cdac -- > select grant to table student 
                  -- only select on that table , no other operation permitted 
		  revoke -- will revert the grants provided 

-- Rollback commit savepoints 

Real world Example :
balance = 500

Withdrawing 100 Rupees from an ATM
--------------------------------

1) Checks if it is valid account holder
2) Check if balance > 100
3) balance = balance-100
4) Dispense Cash from the ATM  -- failed

 rollback;

balance = 400 -- success
balance = 500 -- failure

Explaination : 
	1 2 3 4

	delete 1 ---> delete 2 --> commit (3 4 )
	delete 1 ---> delete 2 --> rollback (1 2 3 4 )

	delete 1 ---(savepoint A)--> delete 2 -(savepoint B)-> rollback (1 2 3 4 )
	delete 1 ---(savepoint A)--> delete 2 -(savepoint B)-> rollback to A ( 2 3 4 )


-------------------------------
SQL Command Categories Demo
-------------------------------
/*
a) DDL (Data Definition Language) [changes made would be permanent]
CREATE, DROP, ALTER, RENAME,TRUNCATE
*/
create table MY_FIRST_TABLE
(
my_number_column number, 
my_float_column number(5,2),
my_date_column date,
my_timestamp_column timestamp,
my_timestampTZ_column timestamp with time zone,
my_varchar2_column varchar2(100)
);

describe my_first_table;

/* three ways you can get date for a column*/
select sysdate from dual;
select current_date from dual;
select to_date('01-01-2022 13:00:00','dd-mm-yyyy hh24:mi:ss') from dual;

/* three ways you can get timestamp value for a column*/
select systimestamp from dual;
select current_timestamp from dual;
select to_timestamp('01-JAN-2022 13:00:00:9999','dd-mon-yyyy hh24:mi:ss:FF') from dual;


-- display purposes 
alter session set nls_date_format = 'dd-mm-yyyy hh24:mi:ss';
alter session set nls_timestamp_format = 'dd-mm-yyyy hh24:mi:ss.ff';

select * from MY_FIRST_TABLE ;
-- INSERT INTO MY_FIRST_TABLE(COLUMN_LIST) VALUES (VALUE_LIST);

insert into my_first_table
(my_number_column,my_float_column,my_date_column,my_timestamp_column,my_timestampTZ_column,my_varchar2_column)
values 
(1,2.9,to_date('01-01-2022 13:00:00','dd-mm-yyyy hh24:mi:ss'),to_timestamp('01-JAN-2022 13:00:00:9999','dd-mon-yyyy hh24:mi:ss:FF'),systimestamp,'my_first_row');

INSERT INTO MY_FIRST_TABLE(my_number_column,my_float_column,my_date_column,my_timestamp_column,my_timestampTZ_column)
VALUES (2,2.2,current_date,current_timestamp,current_timestamp);

INSERT INTO MY_FIRST_TABLE(my_number_column,my_float_column,my_date_column,my_timestamp_column,my_timestampTZ_column)
VALUES (2,2.2,current_date,current_timestamp,current_timestamp);

INSERT INTO MY_FIRST_TABLE(my_number_column,my_float_column,my_date_column,my_timestamp_column)
VALUES (3,3.3,current_date,current_timestamp);

-- invalid case for number(5,2) --- 3 digits before point and 2 digits after point 
INSERT INTO MY_FIRST_TABLE(my_number_column,my_float_column,my_date_column,my_timestamp_column,my_timestampTZ_column)
VALUES (12,9999.99,current_date,current_timestamp,current_timestamp);

INSERT INTO MY_FIRST_TABLE(my_number_column,my_float_column,my_date_column,my_timestamp_column,my_timestampTZ_column)
VALUES (12,999.999,current_date,current_timestamp,current_timestamp);

INSERT INTO MY_FIRST_TABLE(my_number_column,my_float_column,my_date_column,my_timestamp_column,my_timestampTZ_column)
VALUES (33,23.299,to_date('27-Sep-2022 14:53:00','dd-mm-yyyy hh24:mi:ss'),to_timestamp('27-Sep-2022 14:53:00.100900','dd-mm-yyyy hh24:mi:ss.ff'),current_timestamp);


/* ------------------
delete and update
------------------- */
drop table MY_FIRST_TABLE;

create table MY_FIRST_TABLE
(
my_number_column number, 
my_float_column number(5,2),
my_date_column date,
my_timestamp_column timestamp,
my_timestampTZ_column timestamp with time zone,
my_varchar2_column varchar2(100)
);

INSERT INTO MY_FIRST_TABLE(my_number_column,my_float_column,my_date_column,my_timestamp_column,my_timestampTZ_column)
VALUES (1,1.2,sysdate,systimestamp,systimestamp);

INSERT INTO MY_FIRST_TABLE(my_number_column,my_float_column,my_date_column,my_timestamp_column,my_timestampTZ_column)
VALUES (1,1.2,sysdate,systimestamp,systimestamp);

select * from MY_FIRST_TABLE ;

delete from MY_FIRST_TABLE ;

select * from MY_FIRST_TABLE ;

rollback;

select * from MY_FIRST_TABLE ;
update  MY_FIRST_TABLE  set my_float_column = 5.9;

select * from MY_FIRST_TABLE   ;


-----------------------------------
--- difference between truncate and delete 
-----------------------------------

INSERT INTO MY_FIRST_TABLE(my_number_column,my_float_column,my_date_column,my_timestamp_column,my_timestampTZ_column)
VALUES (1,1.2,sysdate,systimestamp,systimestamp);

INSERT INTO MY_FIRST_TABLE(my_number_column,my_float_column,my_date_column,my_timestamp_column,my_timestampTZ_column)
VALUES (2,2.2,sysdate,systimestamp,systimestamp);

select * from MY_FIRST_TABLE;

select * from MY_FIRST_TABLE   ;
delete from MY_FIRST_TABLE ;
rollback;
select * from MY_FIRST_TABLE   ;

select * from MY_FIRST_TABLE   ;
truncate table MY_FIRST_TABLE ;
rollback;
select * from MY_FIRST_TABLE   ;

--------------------------
rollback and savepoint and commit
------------------------

drop table dummy;
create table dummy
(
 dummy_col number
);
insert into dummy(dummy_col) values ( 1);
insert into dummy(dummy_col) values ( 2);
insert into dummy(dummy_col) values ( 3);
insert into dummy(dummy_col) values ( 4);

select * from dummy;


-- case 1  commit
exec savepoint s1 ;
 delete from dummy where dummy_col = 1 ;
exec savepoint s2 ;
 delete from dummy where dummy_col = 2 ;
commit; 
select * from dummy;


-- case 2  rollback
exec savepoint s1 ;
 delete from dummy where dummy_col = 1 ;
exec savepoint s2 ;
 delete from dummy where dummy_col = 2 ;
rollback; 
select * from dummy;

-- case 2  rollback to savepoint
exec savepoint s1 ;
 delete from dummy where dummy_col = 1 ;
exec savepoint s2 ;
 delete from dummy where dummy_col = 2 ;
rollback to s2; 
select * from dummy;

exec savepoint s1 ;
 delete from dummy where dummy_col = 1 ;
exec savepoint s2 ;
 delete from dummy where dummy_col = 2 ;
rollback to s1; 
select * from dummy;

----------------
grant and revoke

https://www.oracletutorial.com/oracle-administration/oracle-grant/

-----------------
------------------------------
demo on Integrity constraint
------------------------------
-- create the table 
CREATE TABLE MY_FIRST_TABLE
(
NAME VARCHAR2(100),
ROLLNO NUMBER ,
DATE_OF_ENROLLMENT DATE
);

desc MY_FIRST_TABLE;

select  * FrOM  MY_FIRST_TABLE;
insert into MY_FIRST_TABLE(ROLLNO) values (1);
-- duplicate insert
insert into MY_FIRST_TABLE(ROLLNO) values (1);
-- null insert
insert into MY_FIRST_TABLE(ROLLNO) values (null);

-- a) primary key rollno (Unique + not null )

drop TABLE MY_FIRST_TABLE;

CREATE TABLE MY_FIRST_TABLE
(
ROLLNO NUMBER,
NAME VARCHAR2(100),
DATE_OF_ENROLLMENT DATE,
constraint cons1 primary key(rollno)
);

desc MY_FIRST_TABLE;
select  * FrOM  MY_FIRST_TABLE;
insert into MY_FIRST_TABLE(ROLLNO) values (1);
-- duplicate insert
insert into MY_FIRST_TABLE(ROLLNO) values (1);
-- null insert
insert into MY_FIRST_TABLE(ROLLNO) values (null);

select * from user_constraints ;
-- DROPPING THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE drop constraint cons1;

-- adding THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE add constraint cons1 primary key(rollno);


-- a) Unique key NAME (Unique)
drop TABLE MY_FIRST_TABLE;

CREATE TABLE MY_FIRST_TABLE
(
ROLLNO NUMBER,
NAME VARCHAR2(100),
DATE_OF_ENROLLMENT DATE,
constraint cons1 primary key(rollno),
constraint cons2 unique(NAME)
);

select  * FrOM USER_constraints where table_name = 'MY_FIRST_TABLE' ;
select  * FrOM  MY_FIRST_TABLE;
insert into MY_FIRST_TABLE(ROLLNO,NAME) values (1,'gaurav');
-- duplicate insert
insert into MY_FIRST_TABLE(ROLLNO,NAME) values (2,'gaurav');
-- null insert
insert into MY_FIRST_TABLE(ROLLNO,NAME) values (3,null);
insert into MY_FIRST_TABLE(ROLLNO,NAME) values (4,null);

-- DROPPING THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE drop constraint cons2;

-- adding THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE add constraint cons2 unique(NAME);